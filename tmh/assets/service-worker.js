// TMH by TCSE v0.9.0
// service-worker.js ‚Äî —Å–µ—Ä–≤–∏—Å-–≤–æ—Ä–∫–µ—Ä –¥–ª—è PWA
// –í–µ—Ä—Å–∏—è: 1.1 ‚Äî —Å —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π

// === –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ –≤–Ω–µ—à–Ω–∏–π PHP-—Ñ–∞–π–ª ===
// –¢–∞–∫ –∫–∞–∫ Service Worker —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å—Ä–µ–¥–µ,
// –º—ã –Ω–µ –º–æ–∂–µ–º –Ω–∞–ø—Ä—è–º—É—é –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å PHP. –í–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ:
// 1. –°–æ–∑–¥–∞—ë–º `sw-config.php`, –∫–æ—Ç–æ—Ä—ã–π –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
// 2. –ó–∞–≥—Ä—É–∂–∞–µ–º –µ—ë –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ

const CONFIG_URL = '/plugins/tcse/tmh/sw-config.php';
const CACHE_NAME = 'tmh-player-v3';
let urlsToCache = [
    '/',
    '/tmh/player.html',
    '/tmh/assets/app.js',
    '/tmh/assets/styles.css',
    '/tmh/assets/img/logo_192.jpg',
    '/tmh/assets/img/logo_512.jpg',
    '/tmh/core/manifest.php'
];

// === –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ ===
async function loadConfig() {
    try {
        const response = await fetch(CONFIG_URL);
        if (response.ok) {
            const config = await response.json();
            const baseUrl = config.base_url;

            // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª—é—á–µ–≤—ã–µ URL –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞
            urlsToCache.push(
                `${baseUrl}/core/proxy.php`,
                `${baseUrl}/core/update_play.php`,
                `${baseUrl}/core/stream.php`,
                `${baseUrl}/core/cover.php`
            );
        }
    } catch (error) {
        console.warn('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è SW:', error);
        // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å –±–∞–∑–æ–≤—ã–º –Ω–∞–±–æ—Ä–æ–º
    }
}

// === –£—Å—Ç–∞–Ω–æ–≤–∫–∞: –∫—ç—à–∏—Ä—É–µ–º —Ä–µ—Å—É—Ä—Å—ã ===
self.addEventListener('install', async (event) => {
    console.log('üîß Service Worker: —É—Å—Ç–∞–Ω–æ–≤–∫–∞...');
    await loadConfig();

    event.waitUntil(
        caches.open(CACHE_NAME)
            .then(async (cache) => {
                const cachePromises = urlsToCache.map(url => {
                    return fetch(url)
                        .then(res => {
                            if (res.ok) {
                                return cache.put(url, res.clone());
                            }
                        })
                        .catch(err => {
                            console.warn(`‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–∫—ç—à–∏—Ä–æ–≤–∞—Ç—å: ${url}`, err);
                        });
                });
                await Promise.all(cachePromises);
                console.log('‚úÖ Service Worker: —Ä–µ—Å—É—Ä—Å—ã –∑–∞–∫—ç—à–∏—Ä–æ–≤–∞–Ω—ã');
            })
            .catch(err => console.error('‚ùå –û—à–∏–±–∫–∞ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è:', err))
    );
});

// === –ê–∫—Ç–∏–≤–∞—Ü–∏—è: –æ—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä–æ–≥–æ –∫—ç—à–∞ ===
self.addEventListener('activate', (event) => {
    console.log('üîß Service Worker: –∞–∫—Ç–∏–≤–∞—Ü–∏—è...');
    event.waitUntil(
        caches.keys().then(cacheNames => {
            return Promise.all(
                cacheNames.filter(name => name !== CACHE_NAME)
                          .map(name => caches.delete(name))
            );
        }).then(() => {
            console.log('‚úÖ Service Worker: —Å—Ç–∞—Ä—ã–µ –∫—ç—à–∏ —É–¥–∞–ª–µ–Ω—ã');
        })
    );
});

// === –ó–∞—Ö–≤–∞—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ ===
self.addEventListener('fetch', (event) => {
    const request = event.request;
    const url = new URL(request.url);

    // –ö—ç—à–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω—ã–µ —Ç–∏–ø—ã —Ä–µ—Å—É—Ä—Å–æ–≤
    if (['script', 'style', 'image', 'document'].includes(request.destination)) {
        event.respondWith(
            caches.match(request)
                .then(response => {
                    return response || fetch(request);
                })
        );
    }
    // –î–ª—è API-–∑–∞–ø—Ä–æ—Å–æ–≤ ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –±–µ–∑ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è
    else if (url.pathname.includes('core/proxy.php') || 
             url.pathname.includes('core/update_play.php')) {
        event.respondWith(fetch(request));
    }
    // –í—Å–µ –æ—Å—Ç–∞–ª—å–Ω–æ–µ ‚Äî –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    else {
        event.respondWith(fetch(request));
    }
});